name: BlNepali
on:
  push:
    branches:
      - main
jobs:
  build:
    name: BlNepali PHP ${{ matrix.php-versions }} - OS ${{ matrix.operating-system}} Build
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: db_test_laravel
      DB_USERNAME: root
      DB_PASSWORD: password
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: db_test_laravel
        ports:
          - 3306/tcp
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ ubuntu-latest ]
        php-versions: [ '7.4' ,'8.2']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Copy Env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Run Migrations
        run: php artisan migrate
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
      #      - name: Execute tests (Unit and Feature tests) via PHPUnit
      #        run: vendor/bin/phpunit --coverage-text
      #        env:
      #          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
  #      - name: Install NPM dependencies
  #        run: npm install
  #  quality:
  #    needs: build
  #    name: Code Quality
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Execute Code Sniffer via Pint
  #        run: composer cs
  #      - name: Execute Code Static Analysis (PHP Stan + Larastan)
  #        run: composer phpstan

  deploy:
    name: BlNepali Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Deploy application
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{secrets.SSH_HOST}}
          key: ${{secrets.SSH_SECRET}}
          username: ${{secrets.SSH_USERNAME}}
          passphrase: ${{secrets.SSH_PASSPHRASE}}
          script: |
            cd /var/www/production/blnepali
            git pull
            php artisan config:cache
            php artisan route:clear
            php artisan view:clear
            echo 'Git pull successfully. '
